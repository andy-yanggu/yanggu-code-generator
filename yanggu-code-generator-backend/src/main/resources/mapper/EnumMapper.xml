<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yanggu.code.generator.mapper.EnumMapper">

    <!-- 所有字段 -->
    <sql id="allColumns">
        e.id,
        e.enum_name,
        e.enum_desc,
        e.project_id,
        e.create_time,
        e.update_time,
        e.is_delete
    </sql>

    <!-- 过滤SQL -->
    <sql id="whereSQL">
        <!-- 这里写过滤语句，过滤项需要加query前缀 -->
        <if test="@com.yanggu.code.generator.common.mybatis.util.MybatisUtil@isNotEmpty(query, 'projectId')">
            AND e.project_id = #{query.projectId}
        </if>
        <if test="@com.yanggu.code.generator.common.mybatis.util.MybatisUtil@isNotEmpty(query, 'enumName')">
            AND e.enum_name LIKE CONCAT('%', #{query.enumName}, '%')
        </if>
    </sql>

    <!-- Entity类字段映射 -->
    <resultMap type="com.yanggu.code.generator.domain.entity.EnumEntity" id="enumMap">
        <id property="id" column="id"/>
        <result property="enumName" column="enum_name"/>
        <result property="enumDesc" column="enum_desc"/>
        <result property="projectId" column="project_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="isDelete" column="is_delete"/>
    </resultMap>

    <resultMap id="enumModelMap" type="com.yanggu.code.generator.domain.entity.EnumEntity" autoMapping="true">
        <id property="id" column="id"/>
        <collection property="enumItemList" ofType="com.yanggu.code.generator.domain.entity.EnumItemEntity" autoMapping="true">
            <id property="id" column="enum_item_id"/>
        </collection>
    </resultMap>

    <!-- Entity分页 -->
    <select id="entityPage" resultMap="enumMap">
        SELECT
            <include refid="allColumns"/>
        FROM
            gen_enum
        <where>
            is_delete = 0
            <include refid="whereSQL"/>
        </where>
        <include refid="com.yanggu.code.generator.common.mybatis.mapper.BaseMapperPlus.orderBySQL"/>
    </select>

    <!-- Entity列表 -->
    <select id="entityList" resultMap="enumMap">
        SELECT
            <include refid="allColumns"/>
        FROM
            gen_enum
        <where>
            is_delete = 0
            <include refid="whereSQL"/>
        </where>
        <include refid="com.yanggu.code.generator.common.mybatis.mapper.BaseMapperPlus.orderBySQL"/>
    </select>

    <!-- VO分页 -->
    <select id="voPage" resultType="com.yanggu.code.generator.domain.vo.EnumVO">
        SELECT
            <include refid="allColumns"/>,
            p.project_name,
            p.generator_type,
            p.enum_template_group_id
        FROM
            gen_enum AS e
        JOIN gen_project AS p ON e.project_id = p.id AND p.is_delete = 0
        <where>
            e.is_delete = 0
            <include refid="whereSQL"/>
        </where>
        <include refid="com.yanggu.code.generator.common.mybatis.mapper.BaseMapperPlus.orderBySQL"/>
    </select>

    <!-- VO列表 -->
    <select id="voList" resultType="com.yanggu.code.generator.domain.vo.EnumVO">
        SELECT
            <include refid="allColumns"/>
        FROM
            gen_enum
        <where>
            is_delete = 0
            <include refid="whereSQL"/>
        </where>
        <include refid="com.yanggu.code.generator.common.mybatis.mapper.BaseMapperPlus.orderBySQL"/>
    </select>

    <select id="selectEnumList" resultMap="enumModelMap">
        SELECT
            e.id,
            e.enum_name,
            e.enum_desc,
            ei.id AS enum_item_id,
            ei.enum_item_name,
            ei.enum_item_code,
            ei.enum_item_desc
        FROM
            gen_project AS p
        JOIN gen_enum AS e ON e.project_id = p.id AND e.is_delete = 0
        JOIN gen_enum_item AS ei ON ei.enum_id = e.id AND ei.is_delete = 0
        WHERE
            p.id = #{projectId} AND p.is_delete = 0
    </select>

    <select id="distinctProjectIdList" resultType="java.lang.Long">
        SELECT
            project_id
        FROM
            gen_enum
        WHERE
            is_delete = 0
        AND id IN
        <foreach collection="idList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        GROUP BY
            project_id
    </select>

</mapper>