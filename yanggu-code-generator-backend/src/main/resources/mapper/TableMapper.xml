<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yanggu.code.generator.mapper.TableMapper">

    <!-- 所有字段 -->
    <sql id="allColumns">
        t.id,
        t.table_name,
        t.database_name,
        t.class_name,
        t.table_comment,
        t.project_id,
        t.author,
        t.version,
        t.function_name,
        t.form_layout,
        t.create_time,
        t.update_time,
        t.is_delete
    </sql>

    <!-- 过滤SQL -->
    <sql id="whereSQL">
        <!-- 这里写过滤语句，过滤项需要加query前缀 -->
        <if test="@com.yanggu.code.generator.common.mybatis.util.MybatisUtil@isNotEmpty(query, 'tableName')">
            AND t.table_name LIKE CONCAT('%', #{query.tableName}, '%')
        </if>
        <if test="@com.yanggu.code.generator.common.mybatis.util.MybatisUtil@isNotEmpty(query, 'projectId')">
            AND t.project_id = #{query.projectId}
        </if>
        <if test="@com.yanggu.code.generator.common.mybatis.util.MybatisUtil@isNotEmpty(query, 'databaseName')">
            AND t.database_name LIKE CONCAT('%', #{query.databaseName}, '%')
        </if>
    </sql>

    <!-- Entity类字段映射 -->
    <resultMap type="com.yanggu.code.generator.domain.entity.TableEntity" id="tableMap">
        <id property="id" column="id"/>
        <result property="tableName" column="table_name"/>
        <result property="databaseName" column="database_name"/>
        <result property="className" column="class_name"/>
        <result property="tableComment" column="table_comment"/>
        <result property="projectId" column="project_id"/>
        <result property="author" column="author"/>
        <result property="version" column="version"/>
        <result property="functionName" column="function_name"/>
        <result property="formLayout" column="form_layout"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="isDelete" column="is_delete"/>
    </resultMap>

    <!-- Entity分页 -->
    <select id="entityPage" resultMap="tableMap">
        SELECT
            <include refid="allColumns"/>
        FROM
            gen_table AS t
        <where>
            t.is_delete = 0
            <include refid="whereSQL"/>
        </where>
        <bind name="columnPrefix" value="'t'"/>
        <include refid="com.yanggu.code.generator.common.mybatis.mapper.BaseMapperPlus.prefixOrderBySQL"/>
    </select>

    <!-- Entity列表 -->
    <select id="entityList" resultMap="tableMap">
        SELECT
            <include refid="allColumns"/>
        FROM
            gen_table AS t
        <where>
            t.is_delete = 0
            <include refid="whereSQL"/>
        </where>
        <bind name="columnPrefix" value="'t'"/>
        <include refid="com.yanggu.code.generator.common.mybatis.mapper.BaseMapperPlus.prefixOrderBySQL"/>
    </select>

    <!-- VO分页 -->
    <select id="voPage" resultType="com.yanggu.code.generator.domain.vo.TableVO">
        SELECT
            <include refid="allColumns"/>,
            p.project_name,
            p.table_template_group_id,
            p.generator_type
        FROM
            gen_table AS t
        JOIN gen_project AS p ON t.project_id = p.id AND p.is_delete = 0
        <where>
            t.is_delete = 0
            <include refid="whereSQL"/>
        </where>
        <bind name="columnPrefix" value="'t'"/>
        <include refid="com.yanggu.code.generator.common.mybatis.mapper.BaseMapperPlus.prefixOrderBySQL"/>
    </select>

    <!-- VO列表 -->
    <select id="voList" resultType="com.yanggu.code.generator.domain.vo.TableVO">
        SELECT
            <include refid="allColumns"/>
        FROM
            gen_table AS t
        <where>
            t.is_delete = 0
            <include refid="whereSQL"/>
        </where>
        <bind name="columnPrefix" value="'t'"/>
        <include refid="com.yanggu.code.generator.common.mybatis.mapper.BaseMapperPlus.prefixOrderBySQL"/>
    </select>

    <select id="distinctProjectIdList" resultType="java.lang.Long">
        SELECT
            project_id
        FROM
            gen_table
        WHERE
            is_delete = 0
            AND id IN
            <foreach collection="idList" item="id" open="(" separator="," close=")">
                #{id}
            </foreach>
        GROUP BY
            project_id
    </select>

</mapper>